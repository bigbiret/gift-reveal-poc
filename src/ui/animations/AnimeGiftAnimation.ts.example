import anime from 'animejs';

export class AnimeGiftAnimation {
  private container: HTMLElement;
  private box!: HTMLElement;
  private lid!: HTMLElement;

  constructor(container: HTMLElement) {
    this.container = container;
  }

  async load(_type: 'birthday' | 'wedding' | 'generic'): Promise<void> {
    this.container.innerHTML = `
      <div class="anime-gift-box">
        <div class="gift-lid"></div>
        <div class="gift-body"></div>
      </div>
    `;

    this.box = this.container.querySelector('.anime-gift-box')!;
    this.lid = this.container.querySelector('.gift-lid')!;

    return Promise.resolve();
  }

  async playShake(): Promise<void> {
    return anime({
      targets: this.box,
      rotate: [
        { value: -5, duration: 100 },
        { value: 5, duration: 100 },
        { value: 0, duration: 100 }
      ],
      easing: 'easeInOutQuad',
      loop: 3
    }).finished;
  }

  async playUnwrap(): Promise<void> {
    return anime({
      targets: this.lid,
      translateY: -50,
      rotateX: -25,
      duration: 800,
      easing: 'easeOutElastic(1, .5)'
    }).finished;
  }

  async playReveal(): Promise<void> {
    return anime({
      targets: this.lid,
      translateY: -150,
      rotateX: -90,
      opacity: 0,
      duration: 1000,
      easing: 'easeInQuad'
    }).finished;
  }

  destroy(): void {
    anime.remove(this.box);
    anime.remove(this.lid);
  }
}
